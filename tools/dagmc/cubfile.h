/*
 * Library for accessing Cub files (files generated by the CUBIT finite
 * element meshing application.)
 *
 * Copyright 2006, Jason Kraftcheck (kraftche@cae.wisc.edu)
 * 
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2.1 of the License, or (at your option) any later version.
 * 
 */

#ifndef CUBFILE_H
#define CUBFILE_H

#include <stdio.h>

#ifdef __cplusplus
extern "C" {
#endif

enum CubFileType {
  CUB_FILE_ACIS = 1,
  CUB_FILE_FACET = 3,
  CUB_FILE_GRANITE = 5,
  CUB_FILE_MESH = 2,
  CUB_FILE_FREE_MESH = 4,
  CUB_FILE_ASSEMBLY = 6
};

struct CubFileBlock {
  enum CubFileType type;
  unsigned long offset;
  unsigned long length;
};
  

/* Return values:
 * All functions return 0 upon success
 * If any function encounters an I/O error, the errno error code is returned.
 * The following library-specific errors may occur: */
#define CUB_FILE_INVALID -1
#define CUB_FILE_CORRUPT -2
#define CUB_FILE_OVERFLOW -3
#define CUB_FILE_NOT_FOUND -4


/* Check if file is a CUB file.
   Optinally bass back Boolean value indicating that
   byte order of this machine doesn't match that of 
   file, and the number of data blocks in the file.
*/
int cub_file_check( FILE* file, int* swap_bytes, int* num_blocks );

/* Read table of contents from file.
   Will fial with CUBI_FILE_OVERFLOW if passed array is
   of insufficient length.
 */
int cub_file_contents( FILE* file, struct CubFileBlock* blocks, int blocks_length );

/* List table of contents of Cub file */
void cub_file_list( FILE* cubfile, FILE* output_stream );

/* Copy data block from cub file into separate file.
   Will fail with CUB_FILE_NOT_FOUND if passed block number is
   invalid or corresponds to an empty block in the file.
 */
int cub_file_block( FILE* cubfile, FILE* output_file, int block );

/* Find data block by type and copy it to a separate file.
   Will fail with CUB_FILE_NOT_FOUND if passed type is
   invalid or corresponds to an empty block in the file.
 */
int cub_file_type( FILE* cubfile, FILE* output_file, enum CubFileType type );

#ifdef __cplusplus
} // extern "C"
#endif

#endif
