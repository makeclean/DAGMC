project(DAGMC)

cmake_minimum_required(VERSION 2.8)
cmake_policy(SET CMP0004 OLD)
if (CMAKE_MAJOR_VERSION GREATER 3 OR CMAKE_MAJOR_VERSION EQUAL 3)
  cmake_policy(SET CMP0040 OLD)
endif (CMAKE_MAJOR_VERSION GREATER 3 OR CMAKE_MAJOR_VERSION EQUAL 3)

# Setup test macro
macro (setup_test test_name ext driver libs)
  add_executable(${test_name} ${test_name}.${ext} ${driver})
  target_link_libraries(${test_name} ${libs})
  install(TARGETS ${test_name} DESTINATION tests
                               PERMISSIONS ${PERMS})
  add_test(${test_name} ${test_name})
endmacro (setup_test)

# Run test macro
macro(run_test test_target)
  add_custom_target(${test_target}_runtest COMMAND ${test_target}
                                           DEPENDS ${test_target}
                                           WORKING_DIRECTORY ${PROJECT_SOURCE_DIR})
  add_dependencies(${test_target}_runtest gtest)
endmacro (run_test)

# Installation directories
set(INSTALL_BIN_DIR     bin     CACHE PATH "Installation directory for executables")
set(INSTALL_LIB_DIR     lib     CACHE PATH "Installation directory for libraries")
set(INSTALL_INCLUDE_DIR include CACHE PATH "Installation directory for header files")
set(INSTALL_SHARE_DIR   share   CACHE PATH "Installation directory for other files")

# Permissions of compiled binaries and libraries
set(PERMS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE)

# Determine if we're building static libraries
if (STATIC_LIB)
  set(LIB_TYPE "STATIC")
  set(BUILD_SHARED_LIBRARIES OFF)
  set(CMAKE_FIND_LIBRARY_SUFFIXES ".a")
  set(CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} -static")
else ()
  set(LIB_TYPE "SHARED")
endif (STATIC_LIB)

# Allow use of find_package(HDF5), find_package(MOAB), etc.
set(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} ${CMAKE_CURRENT_LIST_DIR}/cmake)

# Make sure we have HDF5 and MOAB
find_package(HDF5 REQUIRED)
find_package(MOAB REQUIRED)

set(DAG_LINK_LIBS "dagmc ${MOAB_LIBRARIES}")

set(GTEST_INCLUDE_DIR ${CMAKE_SOURCE_DIR}/tools/gtest/gtest-1.7.0/include/)


# Build the DAGMC Toolkit
add_subdirectory(src)

# Build tools
add_subdirectory(tools)
